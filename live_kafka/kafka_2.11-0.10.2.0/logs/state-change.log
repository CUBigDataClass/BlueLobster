[2017-04-29 11:42:31,943] TRACE Controller 0 epoch 1 sending UpdateMetadata request (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1) to brokers Set(0, 1, 2) for partition twitter-topic-1 (state.change.logger)
[2017-04-29 11:42:33,062] TRACE Controller 0 epoch 1 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1) to brokers Set(0, 1, 2) for partition twitter-topic-0 (state.change.logger)
[2017-04-29 11:42:48,406] TRACE Controller 0 epoch 1 changed partition [twitter-topic,0] state from OnlinePartition to OfflinePartition (state.change.logger)
[2017-04-29 11:42:48,407] TRACE Controller 0 epoch 1 started leader election for partition [twitter-topic,0] (state.change.logger)
[2017-04-29 11:42:48,450] TRACE Controller 0 epoch 1 elected leader 2 for Offline partition [twitter-topic,0] (state.change.logger)
[2017-04-29 11:42:48,452] TRACE Controller 0 epoch 1 changed partition [twitter-topic,0] from OfflinePartition to OnlinePartition with leader 2 (state.change.logger)
[2017-04-29 11:42:48,452] TRACE Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:1) to broker 2 for partition [twitter-topic,0] (state.change.logger)
[2017-04-29 11:42:48,452] TRACE Controller 0 epoch 1 sending UpdateMetadata request (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:1) to brokers Set(0, 2) for partition twitter-topic-0 (state.change.logger)
[2017-04-29 11:42:48,493] TRACE Controller 0 epoch 1 changed state of replica 1 for partition [twitter-topic,0] from OnlineReplica to OfflineReplica (state.change.logger)
[2017-04-29 11:42:48,494] TRACE Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:1) to broker 2 for partition [twitter-topic,0] (state.change.logger)
[2017-04-29 11:42:48,494] TRACE Controller 0 epoch 1 sending UpdateMetadata request (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:1) to brokers Set(0, 2) for partition twitter-topic-0 (state.change.logger)
[2017-04-29 11:42:48,564] TRACE Controller 0 epoch 1 changed partition [twitter-topic,0] state from OnlinePartition to OfflinePartition (state.change.logger)
[2017-04-29 11:42:48,564] TRACE Controller 0 epoch 1 changed partition [twitter-topic,1] state from OnlinePartition to OfflinePartition (state.change.logger)
[2017-04-29 11:42:48,565] TRACE Controller 0 epoch 1 started leader election for partition [twitter-topic,0] (state.change.logger)
[2017-04-29 11:42:48,575] ERROR Controller 0 epoch 1 initiated state change for partition [twitter-topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [twitter-topic,0] is alive. Live brokers are: [Set(0)], Assigned replicas are: [List(1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:480)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:376)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2017-04-29 11:42:48,575] TRACE Controller 0 epoch 1 started leader election for partition [twitter-topic,1] (state.change.logger)
[2017-04-29 11:42:48,586] TRACE Controller 0 epoch 1 elected leader 0 for Offline partition [twitter-topic,1] (state.change.logger)
[2017-04-29 11:42:48,587] TRACE Controller 0 epoch 1 changed partition [twitter-topic,1] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2017-04-29 11:42:48,587] TRACE Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1) to broker 0 for partition [twitter-topic,1] (state.change.logger)
[2017-04-29 11:42:48,587] TRACE Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1) to brokers Set(0) for partition twitter-topic-1 (state.change.logger)
[2017-04-29 11:42:48,600] TRACE Controller 0 epoch 1 changed state of replica 2 for partition [twitter-topic,0] from OnlineReplica to OfflineReplica (state.change.logger)
[2017-04-29 11:42:48,604] TRACE Controller 0 epoch 1 changed state of replica 2 for partition [twitter-topic,1] from OnlineReplica to OfflineReplica (state.change.logger)
[2017-04-29 11:42:48,605] TRACE Controller 0 epoch 1 sending become-follower LeaderAndIsr request (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:1) to broker 1 for partition [twitter-topic,0] (state.change.logger)
[2017-04-29 11:42:48,605] TRACE Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1) to broker 0 for partition [twitter-topic,1] (state.change.logger)
[2017-04-29 11:42:48,605] TRACE Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1) to brokers Set(0) for partition twitter-topic-1 (state.change.logger)
[2017-04-29 11:42:48,605] TRACE Controller 0 epoch 1 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:1) to brokers Set(0) for partition twitter-topic-0 (state.change.logger)
[2017-04-29 11:44:14,128] TRACE Controller 1 epoch 2 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1) to brokers Set() for partition twitter-topic-1 (state.change.logger)
[2017-04-29 11:44:14,129] TRACE Controller 1 epoch 2 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:1) to brokers Set() for partition twitter-topic-0 (state.change.logger)
[2017-04-29 11:44:14,223] TRACE Controller 1 epoch 2 started leader election for partition [twitter-topic,0] (state.change.logger)
[2017-04-29 11:44:14,239] ERROR Controller 1 epoch 2 initiated state change for partition [twitter-topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [twitter-topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2017-04-29 11:44:14,242] TRACE Controller 1 epoch 2 started leader election for partition [twitter-topic,1] (state.change.logger)
[2017-04-29 11:44:14,251] ERROR Controller 1 epoch 2 initiated state change for partition [twitter-topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [twitter-topic,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2017-04-29 11:44:19,624] TRACE Controller 1 epoch 2 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1) to brokers Set(1) for partition twitter-topic-1 (state.change.logger)
[2017-04-29 11:44:19,624] TRACE Controller 1 epoch 2 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:1) to brokers Set(1) for partition twitter-topic-0 (state.change.logger)
[2017-04-29 11:44:19,644] TRACE Controller 1 epoch 2 changed state of replica 1 for partition [twitter-topic,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2017-04-29 11:44:19,648] TRACE Controller 1 epoch 2 sending become-follower LeaderAndIsr request (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:1) to broker 1 for partition [twitter-topic,0] (state.change.logger)
[2017-04-29 11:44:19,652] TRACE Controller 1 epoch 2 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:1) to brokers Set(1) for partition twitter-topic-0 (state.change.logger)
[2017-04-29 11:44:19,652] TRACE Controller 1 epoch 2 started leader election for partition [twitter-topic,0] (state.change.logger)
[2017-04-29 11:44:19,668] TRACE Controller 1 epoch 2 elected leader 1 for Offline partition [twitter-topic,0] (state.change.logger)
[2017-04-29 11:44:19,674] TRACE Controller 1 epoch 2 changed partition [twitter-topic,0] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2017-04-29 11:44:19,675] TRACE Controller 1 epoch 2 started leader election for partition [twitter-topic,1] (state.change.logger)
[2017-04-29 11:44:19,681] ERROR Controller 1 epoch 2 initiated state change for partition [twitter-topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [twitter-topic,1] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2017-04-29 11:44:19,682] TRACE Controller 1 epoch 2 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:3,ControllerEpoch:2) to broker 1 for partition [twitter-topic,0] (state.change.logger)
[2017-04-29 11:44:19,684] TRACE Controller 1 epoch 2 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:3,ControllerEpoch:2) to brokers Set(1) for partition twitter-topic-0 (state.change.logger)
[2017-04-29 11:44:24,759] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:1),ReplicationFactor:2),AllReplicas:1,2) for partition twitter-topic-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 0 (state.change.logger)
[2017-04-29 11:44:24,759] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1),ReplicationFactor:2),AllReplicas:0,2) for partition twitter-topic-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 0 (state.change.logger)
[2017-04-29 11:44:24,769] TRACE Controller 1 epoch 2 received response {error_code=0} for a request sent to broker 192.168.3.85:9093 (id: 1 rack: null) (state.change.logger)
[2017-04-29 11:44:24,835] TRACE Broker 1 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=-1, leaderEpoch=2, isr=[], zkVersion=5, replicas=[1, 2]) correlation id 1 from controller 1 epoch 2 for partition [twitter-topic,0] (state.change.logger)
[2017-04-29 11:44:24,856] TRACE Broker 1 handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-follower transition for partition twitter-topic-0 (state.change.logger)
[2017-04-29 11:44:24,869] ERROR Broker 1 received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 1 for partition twitter-topic-0 but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2017-04-29 11:44:24,920] TRACE Broker 1 completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-follower transition for partition twitter-topic-0 (state.change.logger)
[2017-04-29 11:44:24,938] TRACE Controller 1 epoch 2 received response {error_code=0,partitions=[{topic=twitter-topic,partition=0,error_code=0}]} for a request sent to broker 192.168.3.85:9093 (id: 1 rack: null) (state.change.logger)
[2017-04-29 11:44:24,941] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:2,ControllerEpoch:1),ReplicationFactor:2),AllReplicas:1,2) for partition twitter-topic-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2017-04-29 11:44:24,942] TRACE Controller 1 epoch 2 received response {error_code=0} for a request sent to broker 192.168.3.85:9093 (id: 1 rack: null) (state.change.logger)
[2017-04-29 11:44:24,943] TRACE Broker 1 received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=3, isr=[1], zkVersion=6, replicas=[1, 2]) correlation id 3 from controller 1 epoch 2 for partition [twitter-topic,0] (state.change.logger)
[2017-04-29 11:44:24,946] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 2 starting the become-leader transition for partition twitter-topic-0 (state.change.logger)
[2017-04-29 11:44:24,981] TRACE Broker 1 stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 3 for partition twitter-topic-0 (state.change.logger)
[2017-04-29 11:44:24,982] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 2 for the become-leader transition for partition twitter-topic-0 (state.change.logger)
[2017-04-29 11:44:24,983] TRACE Controller 1 epoch 2 received response {error_code=0,partitions=[{topic=twitter-topic,partition=0,error_code=0}]} for a request sent to broker 192.168.3.85:9093 (id: 1 rack: null) (state.change.logger)
[2017-04-29 11:44:24,985] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:3,ControllerEpoch:2),ReplicationFactor:2),AllReplicas:1,2) for partition twitter-topic-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2017-04-29 11:44:24,985] TRACE Controller 1 epoch 2 received response {error_code=0} for a request sent to broker 192.168.3.85:9093 (id: 1 rack: null) (state.change.logger)
[2017-04-29 11:44:52,721] TRACE Controller 1 epoch 2 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1) to brokers Set(0, 1) for partition twitter-topic-1 (state.change.logger)
[2017-04-29 11:44:52,721] TRACE Controller 1 epoch 2 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:3,ControllerEpoch:2) to brokers Set(0, 1) for partition twitter-topic-0 (state.change.logger)
[2017-04-29 11:44:52,722] TRACE Controller 1 epoch 2 changed state of replica 0 for partition [twitter-topic,1] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2017-04-29 11:44:52,723] TRACE Controller 1 epoch 2 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1) to broker 0 for partition [twitter-topic,1] (state.change.logger)
[2017-04-29 11:44:52,723] TRACE Controller 1 epoch 2 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1) to brokers Set(0, 1) for partition twitter-topic-1 (state.change.logger)
[2017-04-29 11:44:52,724] TRACE Controller 1 epoch 2 started leader election for partition [twitter-topic,1] (state.change.logger)
[2017-04-29 11:44:52,736] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:3,ControllerEpoch:2),ReplicationFactor:2),AllReplicas:1,2) for partition twitter-topic-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 5 (state.change.logger)
[2017-04-29 11:44:52,736] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1),ReplicationFactor:2),AllReplicas:0,2) for partition twitter-topic-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 5 (state.change.logger)
[2017-04-29 11:44:52,737] TRACE Controller 1 epoch 2 received response {error_code=0} for a request sent to broker 192.168.3.85:9093 (id: 1 rack: null) (state.change.logger)
[2017-04-29 11:44:52,739] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1),ReplicationFactor:2),AllReplicas:0,2) for partition twitter-topic-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 6 (state.change.logger)
[2017-04-29 11:44:52,746] TRACE Controller 1 epoch 2 received response {error_code=0} for a request sent to broker 192.168.3.85:9093 (id: 1 rack: null) (state.change.logger)
[2017-04-29 11:44:52,761] TRACE Controller 1 epoch 2 elected leader 0 for Offline partition [twitter-topic,1] (state.change.logger)
[2017-04-29 11:44:52,762] TRACE Controller 1 epoch 2 changed partition [twitter-topic,1] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2017-04-29 11:44:52,763] TRACE Controller 1 epoch 2 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2) to broker 0 for partition [twitter-topic,1] (state.change.logger)
[2017-04-29 11:44:52,763] TRACE Controller 1 epoch 2 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2) to brokers Set(0, 1) for partition twitter-topic-1 (state.change.logger)
[2017-04-29 11:44:52,769] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2),ReplicationFactor:2),AllReplicas:0,2) for partition twitter-topic-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 7 (state.change.logger)
[2017-04-29 11:44:52,772] TRACE Controller 1 epoch 2 received response {error_code=0} for a request sent to broker 192.168.3.85:9093 (id: 1 rack: null) (state.change.logger)
[2017-04-29 11:44:57,834] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:3,ControllerEpoch:2),ReplicationFactor:2),AllReplicas:1,2) for partition twitter-topic-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 0 (state.change.logger)
[2017-04-29 11:44:57,834] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1),ReplicationFactor:2),AllReplicas:0,2) for partition twitter-topic-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 0 (state.change.logger)
[2017-04-29 11:44:57,840] TRACE Controller 1 epoch 2 received response {error_code=0} for a request sent to broker 192.168.3.85:9092 (id: 0 rack: null) (state.change.logger)
[2017-04-29 11:44:57,919] TRACE Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=1, isr=[0], zkVersion=2, replicas=[0, 2]) correlation id 1 from controller 1 epoch 2 for partition [twitter-topic,1] (state.change.logger)
[2017-04-29 11:44:57,927] TRACE Broker 0 handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition twitter-topic-1 (state.change.logger)
[2017-04-29 11:44:57,948] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition twitter-topic-1 (state.change.logger)
[2017-04-29 11:44:57,949] TRACE Broker 0 completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition twitter-topic-1 (state.change.logger)
[2017-04-29 11:44:57,957] TRACE Controller 1 epoch 2 received response {error_code=0,partitions=[{topic=twitter-topic,partition=1,error_code=0}]} for a request sent to broker 192.168.3.85:9092 (id: 0 rack: null) (state.change.logger)
[2017-04-29 11:44:57,959] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1),ReplicationFactor:2),AllReplicas:0,2) for partition twitter-topic-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2017-04-29 11:44:57,960] TRACE Controller 1 epoch 2 received response {error_code=0} for a request sent to broker 192.168.3.85:9092 (id: 0 rack: null) (state.change.logger)
[2017-04-29 11:44:57,962] TRACE Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=2, isr=[0], zkVersion=3, replicas=[0, 2]) correlation id 3 from controller 1 epoch 2 for partition [twitter-topic,1] (state.change.logger)
[2017-04-29 11:44:57,962] TRACE Broker 0 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 2 starting the become-leader transition for partition twitter-topic-1 (state.change.logger)
[2017-04-29 11:44:57,967] INFO Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 2 for partition twitter-topic-1 since it is already the leader for the partition. (state.change.logger)
[2017-04-29 11:44:57,967] TRACE Broker 0 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 2 for the become-leader transition for partition twitter-topic-1 (state.change.logger)
[2017-04-29 11:44:57,968] TRACE Controller 1 epoch 2 received response {error_code=0,partitions=[{topic=twitter-topic,partition=1,error_code=0}]} for a request sent to broker 192.168.3.85:9092 (id: 0 rack: null) (state.change.logger)
[2017-04-29 11:44:57,970] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2),ReplicationFactor:2),AllReplicas:0,2) for partition twitter-topic-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2017-04-29 11:44:57,971] TRACE Controller 1 epoch 2 received response {error_code=0} for a request sent to broker 192.168.3.85:9092 (id: 0 rack: null) (state.change.logger)
