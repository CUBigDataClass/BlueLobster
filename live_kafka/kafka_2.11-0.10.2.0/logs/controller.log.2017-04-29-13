[2017-04-29 13:44:39,932] DEBUG [Controller 2]: Controller resigning, broker id 2 (kafka.controller.KafkaController)
[2017-04-29 13:44:39,932] DEBUG [Controller 2]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-04-29 13:44:39,932] INFO [Partition state machine on Controller 2]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2017-04-29 13:44:39,932] INFO [Replica state machine on controller 2]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2017-04-29 13:44:39,933] INFO [Controller 2]: Broker 2 resigned as the controller (kafka.controller.KafkaController)
[2017-04-29 13:45:11,121] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2017-04-29 13:45:11,146] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2017-04-29 13:45:11,147] INFO [Controller 0]: Initialized controller epoch to 17 and zk version 16 (kafka.controller.KafkaController)
[2017-04-29 13:45:11,149] INFO [Controller 0]: Controller 0 incremented epoch to 18 (kafka.controller.KafkaController)
[2017-04-29 13:45:11,150] DEBUG [Controller 0]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-04-29 13:45:11,195] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2017-04-29 13:45:11,196] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2017-04-29 13:45:11,196] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2017-04-29 13:45:11,199] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2017-04-29 13:45:11,199] INFO [Controller 0]: Partitions already reassigned: Set() (kafka.controller.KafkaController)
[2017-04-29 13:45:11,200] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2017-04-29 13:45:11,203] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2017-04-29 13:45:11,203] INFO [Controller 0]: List of topics ineligible for deletion: twitter-topic,twitter-topic-test-test (kafka.controller.KafkaController)
[2017-04-29 13:45:11,205] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-04-29 13:45:11,206] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-04-29 13:45:11,206] INFO [Controller 0]: Current list of topics in the cluster: Set(twitter-topic, twitter-topic-test-test) (kafka.controller.KafkaController)
[2017-04-29 13:45:11,227] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=twitter-topic,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=twitter-topic,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=twitter-topic,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=twitter-topic-test-test,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=twitter-topic,Partition=1,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2017-04-29 13:45:11,237] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitter-topic,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-04-29 13:45:11,245] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitter-topic,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-04-29 13:45:11,251] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitter-topic-test-test,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-04-29 13:45:11,253] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([twitter-topic,0] -> OfflinePartition, [twitter-topic,1] -> OfflinePartition, [twitter-topic-test-test,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2017-04-29 13:45:11,255] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 18 (kafka.controller.KafkaController)
[2017-04-29 13:45:11,256] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2017-04-29 13:45:11,256] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2017-04-29 13:45:11,262] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2017-04-29 13:45:11,263] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2017-04-29 13:45:11,340] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-04-29 13:45:11,355] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-04-29 13:45:11,356] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2017-04-29 13:45:11,362] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2017-04-29 13:45:11,363] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2017-04-29 13:45:11,366] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=twitter-topic,Partition=0,Replica=0],[Topic=twitter-topic,Partition=1,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-04-29 13:45:11,369] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to 192.168.3.63:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-04-29 13:45:11,377] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [twitter-topic,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-04-29 13:45:11,378] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":20,"isr":[0]} for offline partition [twitter-topic,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-04-29 13:45:11,384] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([twitter-topic,0] -> (Leader:0,ISR:0,LeaderEpoch:20,ControllerEpoch:18), [twitter-topic,1] -> (Leader:0,ISR:0,LeaderEpoch:24,ControllerEpoch:17), [twitter-topic-test-test,0] -> (Leader:-1,ISR:,LeaderEpoch:20,ControllerEpoch:17)) (kafka.controller.PartitionStateMachine)
[2017-04-29 13:45:11,388] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [twitter-topic,1]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-04-29 13:45:11,388] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":25,"isr":[0]} for offline partition [twitter-topic,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-04-29 13:45:11,389] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([twitter-topic,0] -> (Leader:0,ISR:0,LeaderEpoch:20,ControllerEpoch:18), [twitter-topic,1] -> (Leader:0,ISR:0,LeaderEpoch:25,ControllerEpoch:18), [twitter-topic-test-test,0] -> (Leader:-1,ISR:,LeaderEpoch:20,ControllerEpoch:17)) (kafka.controller.PartitionStateMachine)
[2017-04-29 13:45:11,393] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitter-topic-test-test,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-04-29 13:45:16,265] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-04-29 13:45:16,268] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([twitter-topic,1] -> List(2, 0), [twitter-topic-test-test,0] -> List(2)), 0 -> Map([twitter-topic,0] -> List(0, 2))) (kafka.controller.KafkaController)
[2017-04-29 13:45:16,270] DEBUG [Controller 0]: topics not in preferred replica Map([twitter-topic,1] -> List(2, 0), [twitter-topic-test-test,0] -> List(2)) (kafka.controller.KafkaController)
[2017-04-29 13:45:16,271] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 1.000000 (kafka.controller.KafkaController)
[2017-04-29 13:45:16,272] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-04-29 13:45:16,272] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-04-29 13:45:50,712] INFO [Controller 1]: Controller starting up (kafka.controller.KafkaController)
[2017-04-29 13:45:50,718] INFO [Controller 1]: Controller startup complete (kafka.controller.KafkaController)
[2017-04-29 13:45:50,788] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0,1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-04-29 13:45:50,797] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 1, deleted brokers: , all live brokers: 0,1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-04-29 13:45:50,797] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2017-04-29 13:45:50,799] INFO [Controller 0]: New broker startup callback for 1 (kafka.controller.KafkaController)
[2017-04-29 13:45:50,800] INFO [Controller-0-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2017-04-29 13:45:50,800] INFO [Controller-0-to-broker-1-send-thread], Controller 0 connected to 192.168.3.63:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-04-29 13:45:50,808] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitter-topic-test-test,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-04-29 13:46:18,404] INFO [Controller 2]: Controller starting up (kafka.controller.KafkaController)
[2017-04-29 13:46:18,411] INFO [Controller 2]: Controller startup complete (kafka.controller.KafkaController)
[2017-04-29 13:46:18,478] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-04-29 13:46:18,490] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 2, deleted brokers: , all live brokers: 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-04-29 13:46:18,490] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2017-04-29 13:46:18,493] INFO [Controller 0]: New broker startup callback for 2 (kafka.controller.KafkaController)
[2017-04-29 13:46:18,493] INFO [Controller-0-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2017-04-29 13:46:18,494] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=twitter-topic,Partition=0,Replica=2],[Topic=twitter-topic,Partition=1,Replica=2],[Topic=twitter-topic-test-test,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2017-04-29 13:46:18,495] INFO [Controller-0-to-broker-2-send-thread], Controller 0 connected to 192.168.3.63:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-04-29 13:46:18,505] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitter-topic-test-test,0]. Pick the leader from the alive assigned replicas: 2 (kafka.controller.OfflinePartitionLeaderSelector)
[2017-04-29 13:46:18,505] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitter-topic-test-test,0]. Elect leader 2 from live brokers 2. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-04-29 13:46:18,506] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":21,"isr":[2]} for offline partition [twitter-topic-test-test,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-04-29 13:46:18,507] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([twitter-topic,0] -> (Leader:0,ISR:0,LeaderEpoch:20,ControllerEpoch:18), [twitter-topic,1] -> (Leader:0,ISR:0,LeaderEpoch:25,ControllerEpoch:18), [twitter-topic-test-test,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:18)) (kafka.controller.PartitionStateMachine)
[2017-04-29 13:46:21,114] DEBUG [IsrChangeNotificationListener on Controller 0]: ISR change notification listener fired (kafka.controller.IsrChangeNotificationListener)
[2017-04-29 13:46:21,122] DEBUG [IsrChangeNotificationListener on Controller 0]: Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([twitter-topic,1], [twitter-topic,0]) (kafka.controller.IsrChangeNotificationListener)
[2017-04-29 13:46:21,125] DEBUG [IsrChangeNotificationListener on Controller 0]: ISR change notification listener fired (kafka.controller.IsrChangeNotificationListener)
[2017-04-29 13:50:16,250] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-04-29 13:50:16,250] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([twitter-topic,1] -> List(2, 0), [twitter-topic-test-test,0] -> List(2)), 0 -> Map([twitter-topic,0] -> List(0, 2))) (kafka.controller.KafkaController)
[2017-04-29 13:50:16,250] DEBUG [Controller 0]: topics not in preferred replica Map([twitter-topic,1] -> List(2, 0)) (kafka.controller.KafkaController)
[2017-04-29 13:50:16,250] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.500000 (kafka.controller.KafkaController)
[2017-04-29 13:50:16,250] INFO [Controller 0]: Starting preferred replica leader election for partitions [twitter-topic,1] (kafka.controller.KafkaController)
[2017-04-29 13:50:16,251] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [twitter-topic,1] (kafka.controller.PartitionStateMachine)
[2017-04-29 13:50:16,255] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 0 for partition [twitter-topic,1] is not the preferred replica. Triggering preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2017-04-29 13:50:16,388] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([twitter-topic,0] -> (Leader:0,ISR:0,2,LeaderEpoch:20,ControllerEpoch:18), [twitter-topic,1] -> (Leader:2,ISR:0,2,LeaderEpoch:26,ControllerEpoch:18), [twitter-topic-test-test,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:18)) (kafka.controller.PartitionStateMachine)
[2017-04-29 13:50:16,391] INFO [Controller 0]: Partition [twitter-topic,1] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2017-04-29 13:50:16,391] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-04-29 13:50:16,391] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-04-29 13:55:16,235] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-04-29 13:55:16,235] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([twitter-topic,1] -> List(2, 0), [twitter-topic-test-test,0] -> List(2)), 0 -> Map([twitter-topic,0] -> List(0, 2))) (kafka.controller.KafkaController)
[2017-04-29 13:55:16,235] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-04-29 13:55:16,236] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2017-04-29 13:55:16,236] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-04-29 13:55:16,236] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
