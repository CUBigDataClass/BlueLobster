[2017-05-01 19:36:08,668] DEBUG [Controller 1]: Controller resigning, broker id 1 (kafka.controller.KafkaController)
[2017-05-01 19:36:08,669] DEBUG [Controller 1]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-05-01 19:36:08,670] INFO [Partition state machine on Controller 1]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2017-05-01 19:36:08,670] INFO [Replica state machine on controller 1]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2017-05-01 19:36:08,671] INFO [Controller 1]: Broker 1 resigned as the controller (kafka.controller.KafkaController)
[2017-05-01 19:43:11,861] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2017-05-01 19:43:58,117] INFO [Controller 1]: Controller starting up (kafka.controller.KafkaController)
[2017-05-01 19:43:58,137] INFO [Controller 1]: Broker 1 starting become controller state transition (kafka.controller.KafkaController)
[2017-05-01 19:43:58,139] INFO [Controller 1]: Initialized controller epoch to 7 and zk version 6 (kafka.controller.KafkaController)
[2017-05-01 19:43:58,142] INFO [Controller 1]: Controller 1 incremented epoch to 8 (kafka.controller.KafkaController)
[2017-05-01 19:43:58,143] DEBUG [Controller 1]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-05-01 19:43:58,172] INFO [Controller 1]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2017-05-01 19:43:58,173] INFO [Controller 1]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2017-05-01 19:43:58,173] INFO [Controller 1]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2017-05-01 19:43:58,176] INFO [Controller 1]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2017-05-01 19:43:58,176] INFO [Controller 1]: Partitions already reassigned: Set() (kafka.controller.KafkaController)
[2017-05-01 19:43:58,177] INFO [Controller 1]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2017-05-01 19:43:58,180] INFO [Controller 1]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2017-05-01 19:43:58,180] INFO [Controller 1]: List of topics ineligible for deletion: twitter-topic (kafka.controller.KafkaController)
[2017-05-01 19:43:58,182] INFO [Controller 1]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-05-01 19:43:58,182] INFO [Controller 1]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-05-01 19:43:58,183] INFO [Controller 1]: Current list of topics in the cluster: Set(twitter-topic) (kafka.controller.KafkaController)
[2017-05-01 19:43:58,202] INFO [Replica state machine on controller 1]: Started replica state machine with initial state -> Map([Topic=twitter-topic,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=twitter-topic,Partition=1,Replica=1] -> ReplicaDeletionIneligible, [Topic=twitter-topic,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=twitter-topic,Partition=1,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2017-05-01 19:43:58,212] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitter-topic,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-05-01 19:43:58,220] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitter-topic,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-05-01 19:43:58,222] INFO [Partition state machine on Controller 1]: Started partition state machine with initial state -> Map([twitter-topic,0] -> OfflinePartition, [twitter-topic,1] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2017-05-01 19:43:58,223] INFO [Controller 1]: Broker 1 is ready to serve as the new controller with epoch 8 (kafka.controller.KafkaController)
[2017-05-01 19:43:58,224] INFO [Controller 1]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2017-05-01 19:43:58,225] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2017-05-01 19:43:58,229] INFO [Controller 1]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2017-05-01 19:43:58,229] INFO [Controller 1]: Controller startup complete (kafka.controller.KafkaController)
[2017-05-01 19:43:58,303] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-05-01 19:43:58,328] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: 1, deleted brokers: , all live brokers: 1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-05-01 19:43:58,328] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2017-05-01 19:43:58,335] INFO [Controller-1-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2017-05-01 19:43:58,336] INFO [Controller 1]: New broker startup callback for 1 (kafka.controller.KafkaController)
[2017-05-01 19:43:58,338] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=twitter-topic,Partition=0,Replica=1],[Topic=twitter-topic,Partition=1,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-05-01 19:43:58,341] INFO [Controller-1-to-broker-1-send-thread], Controller 1 connected to ip-172-31-35-184.us-west-2.compute.internal:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-05-01 19:43:58,350] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitter-topic,0]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2017-05-01 19:43:58,351] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitter-topic,0]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-05-01 19:43:58,351] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":8,"isr":[1]} for offline partition [twitter-topic,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-05-01 19:43:58,355] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([twitter-topic,0] -> (Leader:1,ISR:1,LeaderEpoch:8,ControllerEpoch:8), [twitter-topic,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2017-05-01 19:43:58,360] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitter-topic,1]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2017-05-01 19:43:58,360] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitter-topic,1]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-05-01 19:43:58,360] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":6,"isr":[1]} for offline partition [twitter-topic,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-05-01 19:43:58,362] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([twitter-topic,0] -> (Leader:1,ISR:1,LeaderEpoch:8,ControllerEpoch:8), [twitter-topic,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:8)) (kafka.controller.PartitionStateMachine)
[2017-05-01 19:44:03,230] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-05-01 19:44:03,231] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([twitter-topic,0] -> List(2, 1)), 1 -> Map([twitter-topic,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2017-05-01 19:44:03,233] DEBUG [Controller 1]: topics not in preferred replica Map([twitter-topic,0] -> List(2, 1)) (kafka.controller.KafkaController)
[2017-05-01 19:44:03,234] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 1.000000 (kafka.controller.KafkaController)
[2017-05-01 19:44:03,234] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-05-01 19:44:03,234] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2017-05-01 19:44:44,142] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2017-05-01 19:44:44,149] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2017-05-01 19:44:44,213] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 0,1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-05-01 19:44:44,220] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: 0, deleted brokers: , all live brokers: 0,1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-05-01 19:44:44,220] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2017-05-01 19:44:44,221] INFO [Controller 1]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2017-05-01 19:44:44,222] INFO [Controller-1-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2017-05-01 19:44:44,223] INFO [Controller-1-to-broker-0-send-thread], Controller 1 connected to ip-172-31-35-184.us-west-2.compute.internal:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-05-01 19:45:18,121] INFO [Controller 2]: Controller starting up (kafka.controller.KafkaController)
[2017-05-01 19:45:18,127] INFO [Controller 2]: Controller startup complete (kafka.controller.KafkaController)
[2017-05-01 19:45:18,191] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-05-01 19:45:18,200] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: 2, deleted brokers: , all live brokers: 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-05-01 19:45:18,200] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2017-05-01 19:45:18,202] INFO [Controller 1]: New broker startup callback for 2 (kafka.controller.KafkaController)
[2017-05-01 19:45:18,202] INFO [Controller-1-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2017-05-01 19:45:18,203] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=twitter-topic,Partition=0,Replica=2],[Topic=twitter-topic,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2017-05-01 19:45:18,204] INFO [Controller-1-to-broker-2-send-thread], Controller 1 connected to ip-172-31-35-184.us-west-2.compute.internal:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-05-01 19:45:20,605] DEBUG [IsrChangeNotificationListener on Controller 1]: ISR change notification listener fired (kafka.controller.IsrChangeNotificationListener)
[2017-05-01 19:45:20,612] DEBUG [IsrChangeNotificationListener on Controller 1]: Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([twitter-topic,1], [twitter-topic,0]) (kafka.controller.IsrChangeNotificationListener)
[2017-05-01 19:45:20,616] DEBUG [IsrChangeNotificationListener on Controller 1]: ISR change notification listener fired (kafka.controller.IsrChangeNotificationListener)
