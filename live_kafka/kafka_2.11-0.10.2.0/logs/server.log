[2017-05-01 19:09:47,290] INFO [Group Metadata Manager on Broker 1]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-05-01 19:19:47,290] INFO [Group Metadata Manager on Broker 1]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-05-01 19:25:17,207] INFO Rolled new log segment for 'twitter-topic-0' in 4 ms. (kafka.log.Log)
[2017-05-01 19:25:17,208] INFO Scheduling log segment 50132 for log twitter-topic-0 for deletion. (kafka.log.Log)
[2017-05-01 19:26:17,209] INFO Deleting segment 50132 from log twitter-topic-0. (kafka.log.Log)
[2017-05-01 19:26:17,254] INFO Deleting index /tmp/kafka-logs-1/twitter-topic-0/00000000000000050132.index.deleted (kafka.log.OffsetIndex)
[2017-05-01 19:26:17,254] INFO Deleting index /tmp/kafka-logs-1/twitter-topic-0/00000000000000050132.timeindex.deleted (kafka.log.TimeIndex)
[2017-05-01 19:29:47,290] INFO [Group Metadata Manager on Broker 1]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-05-01 19:35:10,032] INFO Creating /controller (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
[2017-05-01 19:35:10,035] INFO Result of znode creation is: NODEEXISTS (kafka.utils.ZKCheckedEphemeral)
[2017-05-01 19:35:10,040] INFO New leader is 2 (kafka.server.ZookeeperLeaderElector$LeaderChangeListener)
[2017-05-01 19:36:06,119] INFO [Kafka Server 1], shutting down (kafka.server.KafkaServer)
[2017-05-01 19:36:06,120] INFO [Kafka Server 1], Starting controlled shutdown (kafka.server.KafkaServer)
[2017-05-01 19:36:06,144] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions twitter-topic-0 (kafka.server.ReplicaFetcherManager)
[2017-05-01 19:36:06,145] INFO [ReplicaFetcherThread-0-2], Shutting down (kafka.server.ReplicaFetcherThread)
[2017-05-01 19:36:06,161] INFO [Kafka Server 1], Controlled shutdown succeeded (kafka.server.KafkaServer)
[2017-05-01 19:36:06,163] INFO [Socket Server on Broker 1], Shutting down (kafka.network.SocketServer)
[2017-05-01 19:36:06,168] INFO [Socket Server on Broker 1], Shutdown completed (kafka.network.SocketServer)
[2017-05-01 19:36:06,169] INFO [Kafka Request Handler on Broker 1], shutting down (kafka.server.KafkaRequestHandlerPool)
[2017-05-01 19:36:06,226] INFO [ReplicaFetcherThread-0-2], Stopped  (kafka.server.ReplicaFetcherThread)
[2017-05-01 19:36:06,226] INFO [ReplicaFetcherThread-0-2], Shutdown completed (kafka.server.ReplicaFetcherThread)
[2017-05-01 19:36:06,228] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions twitter-topic-0 (kafka.server.ReplicaFetcherManager)
[2017-05-01 19:36:06,229] INFO [Kafka Request Handler on Broker 1], shut down completely (kafka.server.KafkaRequestHandlerPool)
[2017-05-01 19:36:06,231] INFO [ThrottledRequestReaper-Fetch], Shutting down (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2017-05-01 19:36:07,142] INFO [ThrottledRequestReaper-Fetch], Stopped  (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2017-05-01 19:36:07,143] INFO [ThrottledRequestReaper-Fetch], Shutdown completed (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2017-05-01 19:36:07,143] INFO [ThrottledRequestReaper-Produce], Shutting down (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2017-05-01 19:36:08,143] INFO [ThrottledRequestReaper-Produce], Stopped  (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2017-05-01 19:36:08,143] INFO [ThrottledRequestReaper-Produce], Shutdown completed (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2017-05-01 19:36:08,143] INFO [KafkaApi-1] Shutdown complete. (kafka.server.KafkaApis)
[2017-05-01 19:36:08,144] INFO [Replica Manager on Broker 1]: Shutting down (kafka.server.ReplicaManager)
[2017-05-01 19:36:08,144] INFO [ReplicaFetcherManager on broker 1] shutting down (kafka.server.ReplicaFetcherManager)
[2017-05-01 19:36:08,145] INFO [ReplicaFetcherManager on broker 1] shutdown completed (kafka.server.ReplicaFetcherManager)
[2017-05-01 19:36:08,146] INFO [ExpirationReaper-1], Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:36:08,291] INFO [ExpirationReaper-1], Stopped  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:36:08,291] INFO [ExpirationReaper-1], Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:36:08,291] INFO [ExpirationReaper-1], Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:36:08,443] INFO [ExpirationReaper-1], Stopped  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:36:08,443] INFO [ExpirationReaper-1], Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:36:08,445] INFO [Replica Manager on Broker 1]: Shut down completely (kafka.server.ReplicaManager)
[2017-05-01 19:36:08,446] INFO [ExpirationReaper-1], Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:36:08,455] INFO [ExpirationReaper-1], Stopped  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:36:08,455] INFO [ExpirationReaper-1], Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:36:08,456] INFO [GroupCoordinator 1]: Shutting down. (kafka.coordinator.GroupCoordinator)
[2017-05-01 19:36:08,457] INFO [ExpirationReaper-1], Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:36:08,539] INFO [ExpirationReaper-1], Stopped  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:36:08,539] INFO [ExpirationReaper-1], Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:36:08,539] INFO [ExpirationReaper-1], Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:36:08,656] INFO [ExpirationReaper-1], Stopped  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:36:08,656] INFO [ExpirationReaper-1], Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:36:08,656] INFO [GroupCoordinator 1]: Shutdown complete. (kafka.coordinator.GroupCoordinator)
[2017-05-01 19:36:08,656] INFO Shutting down. (kafka.log.LogManager)
[2017-05-01 19:36:08,668] INFO Shutdown complete. (kafka.log.LogManager)
[2017-05-01 19:36:08,673] INFO [Kafka Server 1], shut down completed (kafka.server.KafkaServer)
[2017-05-01 19:43:57,730] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 1
	broker.id.generation.enable = true
	broker.rack = null
	compression.type = producer
	connections.max.idle.ms = 600000
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delete.topic.enable = false
	fetch.purgatory.purge.interval.requests = 1000
	group.max.session.timeout.ms = 300000
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 0.10.2-IV0
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,TRACE:TRACE,SASL_SSL:SASL_SSL,PLAINTEXT:PLAINTEXT
	listeners = PLAINTEXT://:9093
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs-1
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.format.version = 0.10.2-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 1440
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	port = 9092
	principal.builder.class = class org.apache.kafka.common.security.auth.DefaultPrincipalBuilder
	producer.purgatory.purge.interval.requests = 1000
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism.inter.broker.protocol = GSSAPI
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = null
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	unclean.leader.election.enable = true
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2017-05-01 19:43:57,767] INFO starting (kafka.server.KafkaServer)
[2017-05-01 19:43:57,769] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2017-05-01 19:43:57,914] INFO Cluster ID = 689DaEgUTumSMjaoxfAxew (kafka.server.KafkaServer)
[2017-05-01 19:43:57,931] INFO [ThrottledRequestReaper-Fetch], Starting  (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2017-05-01 19:43:57,932] INFO [ThrottledRequestReaper-Produce], Starting  (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2017-05-01 19:43:57,969] INFO Loading logs. (kafka.log.LogManager)
[2017-05-01 19:43:58,000] INFO Completed load of log twitter-topic-1 with 1 log segments and log end offset 99377 in 19 ms (kafka.log.Log)
[2017-05-01 19:43:58,005] INFO Completed load of log twitter-topic-0 with 1 log segments and log end offset 100621 in 1 ms (kafka.log.Log)
[2017-05-01 19:43:58,008] INFO Logs loading complete in 39 ms. (kafka.log.LogManager)
[2017-05-01 19:43:58,051] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2017-05-01 19:43:58,052] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2017-05-01 19:43:58,081] INFO Awaiting socket connections on 0.0.0.0:9093. (kafka.network.Acceptor)
[2017-05-01 19:43:58,083] INFO [Socket Server on Broker 1], Started 1 acceptor threads (kafka.network.SocketServer)
[2017-05-01 19:43:58,097] INFO [ExpirationReaper-1], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:43:58,098] INFO [ExpirationReaper-1], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:43:58,128] INFO Creating /controller (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
[2017-05-01 19:43:58,137] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
[2017-05-01 19:43:58,137] INFO 1 successfully elected as leader (kafka.server.ZookeeperLeaderElector)
[2017-05-01 19:43:58,232] INFO [ExpirationReaper-1], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:43:58,232] INFO New leader is 1 (kafka.server.ZookeeperLeaderElector$LeaderChangeListener)
[2017-05-01 19:43:58,234] INFO [ExpirationReaper-1], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:43:58,234] INFO [ExpirationReaper-1], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:43:58,243] INFO [GroupCoordinator 1]: Starting up. (kafka.coordinator.GroupCoordinator)
[2017-05-01 19:43:58,243] INFO [GroupCoordinator 1]: Startup complete. (kafka.coordinator.GroupCoordinator)
[2017-05-01 19:43:58,244] INFO [Group Metadata Manager on Broker 1]: Removed 0 expired offsets in 1 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-05-01 19:43:58,258] INFO Will not load MX4J, mx4j-tools.jar is not in the classpath (kafka.utils.Mx4jLoader$)
[2017-05-01 19:43:58,265] INFO Processing notification(s) to /config/changes (kafka.common.ZkNodeChangeNotificationListener)
[2017-05-01 19:43:58,270] INFO Processing override for entityPath: topics/twitter-topic with config: {retention.ms=1800000} (kafka.server.DynamicConfigManager)
[2017-05-01 19:43:58,298] INFO Creating /brokers/ids/1 (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
[2017-05-01 19:43:58,302] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
[2017-05-01 19:43:58,303] INFO Registered broker 1 at path /brokers/ids/1 with addresses: EndPoint(ip-172-31-35-184.us-west-2.compute.internal,9093,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.utils.ZkUtils)
[2017-05-01 19:43:58,321] INFO [Kafka Server 1], started (kafka.server.KafkaServer)
[2017-05-01 19:43:58,423] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions  (kafka.server.ReplicaFetcherManager)
[2017-05-01 19:43:58,433] INFO [ReplicaFetcherManager on broker 1] Added fetcher for partitions List() (kafka.server.ReplicaFetcherManager)
[2017-05-01 19:43:58,442] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions twitter-topic-0,twitter-topic-1 (kafka.server.ReplicaFetcherManager)
[2017-05-01 19:44:28,056] INFO Rolled new log segment for 'twitter-topic-1' in 2 ms. (kafka.log.Log)
[2017-05-01 19:44:28,057] INFO Scheduling log segment 49866 for log twitter-topic-1 for deletion. (kafka.log.Log)
[2017-05-01 19:44:43,806] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	compression.type = producer
	connections.max.idle.ms = 600000
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delete.topic.enable = false
	fetch.purgatory.purge.interval.requests = 1000
	group.max.session.timeout.ms = 300000
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 0.10.2-IV0
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,TRACE:TRACE,SASL_SSL:SASL_SSL,PLAINTEXT:PLAINTEXT
	listeners = PLAINTEXT://:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.format.version = 0.10.2-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 1440
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	port = 9092
	principal.builder.class = class org.apache.kafka.common.security.auth.DefaultPrincipalBuilder
	producer.purgatory.purge.interval.requests = 1000
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism.inter.broker.protocol = GSSAPI
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = null
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	unclean.leader.election.enable = true
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2017-05-01 19:44:43,842] INFO starting (kafka.server.KafkaServer)
[2017-05-01 19:44:43,844] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2017-05-01 19:44:43,975] INFO Cluster ID = 689DaEgUTumSMjaoxfAxew (kafka.server.KafkaServer)
[2017-05-01 19:44:43,991] INFO [ThrottledRequestReaper-Fetch], Starting  (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2017-05-01 19:44:43,992] INFO [ThrottledRequestReaper-Produce], Starting  (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2017-05-01 19:44:44,028] INFO Loading logs. (kafka.log.LogManager)
[2017-05-01 19:44:44,031] INFO Logs loading complete in 3 ms. (kafka.log.LogManager)
[2017-05-01 19:44:44,076] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2017-05-01 19:44:44,077] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2017-05-01 19:44:44,107] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2017-05-01 19:44:44,109] INFO [Socket Server on Broker 0], Started 1 acceptor threads (kafka.network.SocketServer)
[2017-05-01 19:44:44,122] INFO [ExpirationReaper-0], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:44:44,123] INFO [ExpirationReaper-0], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:44:44,151] INFO [ExpirationReaper-0], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:44:44,153] INFO [ExpirationReaper-0], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:44:44,154] INFO [ExpirationReaper-0], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:44:44,166] INFO [GroupCoordinator 0]: Starting up. (kafka.coordinator.GroupCoordinator)
[2017-05-01 19:44:44,166] INFO [GroupCoordinator 0]: Startup complete. (kafka.coordinator.GroupCoordinator)
[2017-05-01 19:44:44,167] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 1 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-05-01 19:44:44,180] INFO Will not load MX4J, mx4j-tools.jar is not in the classpath (kafka.utils.Mx4jLoader$)
[2017-05-01 19:44:44,204] INFO Creating /brokers/ids/0 (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
[2017-05-01 19:44:44,212] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
[2017-05-01 19:44:44,213] INFO Registered broker 0 at path /brokers/ids/0 with addresses: EndPoint(ip-172-31-35-184.us-west-2.compute.internal,9092,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.utils.ZkUtils)
[2017-05-01 19:44:44,225] INFO [Kafka Server 0], started (kafka.server.KafkaServer)
[2017-05-01 19:45:17,752] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 2
	broker.id.generation.enable = true
	broker.rack = null
	compression.type = producer
	connections.max.idle.ms = 600000
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delete.topic.enable = false
	fetch.purgatory.purge.interval.requests = 1000
	group.max.session.timeout.ms = 300000
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 0.10.2-IV0
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,TRACE:TRACE,SASL_SSL:SASL_SSL,PLAINTEXT:PLAINTEXT
	listeners = PLAINTEXT://:9094
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs-2
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.format.version = 0.10.2-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 1440
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	port = 9092
	principal.builder.class = class org.apache.kafka.common.security.auth.DefaultPrincipalBuilder
	producer.purgatory.purge.interval.requests = 1000
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism.inter.broker.protocol = GSSAPI
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = null
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	unclean.leader.election.enable = true
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2017-05-01 19:45:17,789] INFO starting (kafka.server.KafkaServer)
[2017-05-01 19:45:17,790] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2017-05-01 19:45:17,920] INFO Cluster ID = 689DaEgUTumSMjaoxfAxew (kafka.server.KafkaServer)
[2017-05-01 19:45:17,937] INFO [ThrottledRequestReaper-Fetch], Starting  (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2017-05-01 19:45:17,938] INFO [ThrottledRequestReaper-Produce], Starting  (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2017-05-01 19:45:17,973] INFO Loading logs. (kafka.log.LogManager)
[2017-05-01 19:45:18,001] INFO Completed load of log twitter-topic-0 with 1 log segments and log end offset 100621 in 16 ms (kafka.log.Log)
[2017-05-01 19:45:18,009] INFO Completed load of log twitter-topic-1 with 1 log segments and log end offset 99377 in 4 ms (kafka.log.Log)
[2017-05-01 19:45:18,012] INFO Logs loading complete in 39 ms. (kafka.log.LogManager)
[2017-05-01 19:45:18,055] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2017-05-01 19:45:18,056] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2017-05-01 19:45:18,085] INFO Awaiting socket connections on 0.0.0.0:9094. (kafka.network.Acceptor)
[2017-05-01 19:45:18,087] INFO [Socket Server on Broker 2], Started 1 acceptor threads (kafka.network.SocketServer)
[2017-05-01 19:45:18,100] INFO [ExpirationReaper-2], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:45:18,101] INFO [ExpirationReaper-2], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:45:18,129] INFO [ExpirationReaper-2], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:45:18,132] INFO [ExpirationReaper-2], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:45:18,132] INFO [ExpirationReaper-2], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2017-05-01 19:45:18,144] INFO [GroupCoordinator 2]: Starting up. (kafka.coordinator.GroupCoordinator)
[2017-05-01 19:45:18,145] INFO [GroupCoordinator 2]: Startup complete. (kafka.coordinator.GroupCoordinator)
[2017-05-01 19:45:18,146] INFO [Group Metadata Manager on Broker 2]: Removed 0 expired offsets in 1 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2017-05-01 19:45:18,159] INFO Will not load MX4J, mx4j-tools.jar is not in the classpath (kafka.utils.Mx4jLoader$)
[2017-05-01 19:45:18,186] INFO Creating /brokers/ids/2 (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
[2017-05-01 19:45:18,191] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
[2017-05-01 19:45:18,192] INFO Registered broker 2 at path /brokers/ids/2 with addresses: EndPoint(ip-172-31-35-184.us-west-2.compute.internal,9094,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.utils.ZkUtils)
[2017-05-01 19:45:18,201] INFO [Kafka Server 2], started (kafka.server.KafkaServer)
[2017-05-01 19:45:18,325] INFO [ReplicaFetcherManager on broker 2] Removed fetcher for partitions twitter-topic-0,twitter-topic-1 (kafka.server.ReplicaFetcherManager)
[2017-05-01 19:45:18,329] INFO Truncating log twitter-topic-0 to offset 100621. (kafka.log.Log)
[2017-05-01 19:45:18,330] INFO Truncating log twitter-topic-1 to offset 99377. (kafka.log.Log)
[2017-05-01 19:45:18,351] INFO [ReplicaFetcherThread-0-1], Starting  (kafka.server.ReplicaFetcherThread)
[2017-05-01 19:45:18,354] INFO [ReplicaFetcherManager on broker 2] Added fetcher for partitions List([twitter-topic-1, initOffset 99377 to broker BrokerEndPoint(1,ip-172-31-35-184.us-west-2.compute.internal,9093)] , [twitter-topic-0, initOffset 100621 to broker BrokerEndPoint(1,ip-172-31-35-184.us-west-2.compute.internal,9093)] ) (kafka.server.ReplicaFetcherManager)
[2017-05-01 19:45:18,367] INFO Partition [twitter-topic,1] on broker 1: Expanding ISR for partition twitter-topic-1 from 1 to 1,2 (kafka.cluster.Partition)
[2017-05-01 19:45:18,371] INFO Partition [twitter-topic,0] on broker 1: Expanding ISR for partition twitter-topic-0 from 1 to 1,2 (kafka.cluster.Partition)
[2017-05-01 19:45:28,059] INFO Deleting segment 49866 from log twitter-topic-1. (kafka.log.Log)
[2017-05-01 19:45:28,102] INFO Deleting index /tmp/kafka-logs-1/twitter-topic-1/00000000000000049866.index.deleted (kafka.log.OffsetIndex)
[2017-05-01 19:45:28,102] INFO Deleting index /tmp/kafka-logs-1/twitter-topic-1/00000000000000049866.timeindex.deleted (kafka.log.TimeIndex)
[2017-05-01 19:45:47,803] INFO Processing notification(s) to /config/changes (kafka.common.ZkNodeChangeNotificationListener)
[2017-05-01 19:45:47,805] INFO Processing notification(s) to /config/changes (kafka.common.ZkNodeChangeNotificationListener)
[2017-05-01 19:45:47,805] INFO Processing notification(s) to /config/changes (kafka.common.ZkNodeChangeNotificationListener)
[2017-05-01 19:45:47,807] INFO Processing override for entityPath: topics/twitter-topic with config: {retention.ms=1800000} (kafka.server.DynamicConfigManager)
[2017-05-01 19:45:47,811] INFO Processing override for entityPath: topics/twitter-topic with config: {retention.ms=1800000} (kafka.server.DynamicConfigManager)
[2017-05-01 19:45:47,813] INFO Processing override for entityPath: topics/twitter-topic with config: {retention.ms=1800000} (kafka.server.DynamicConfigManager)
[2017-05-01 19:45:48,061] INFO Rolled new log segment for 'twitter-topic-1' in 3 ms. (kafka.log.Log)
[2017-05-01 19:45:48,061] INFO Scheduling log segment 49866 for log twitter-topic-1 for deletion. (kafka.log.Log)
[2017-05-01 19:46:48,063] INFO Deleting segment 49866 from log twitter-topic-1. (kafka.log.Log)
[2017-05-01 19:46:48,108] INFO Deleting index /tmp/kafka-logs-2/twitter-topic-1/00000000000000049866.index.deleted (kafka.log.OffsetIndex)
[2017-05-01 19:46:48,108] INFO Deleting index /tmp/kafka-logs-2/twitter-topic-1/00000000000000049866.timeindex.deleted (kafka.log.TimeIndex)
